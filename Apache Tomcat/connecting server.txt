## Apache Tomcat

Apache Tomcat is an open-source web server and servlet container developed by the Apache Software Foundation. Here's a simple breakdown:

Web server: It handles HTTP requests (like a browser asking for a web page) and sends back the response.

Servlet container: It runs Java programs called Servlets and JavaServer Pages (JSP), which are used to create dynamic web content (like login forms, dashboards, etc.).

In short:

If you're building a Java web application, Tomcat is a lightweight and popular server you can deploy and run your app on.

It's mainly used for serving Java applications â€” not full websites like Apache HTTP Server or Nginx does for static sites.

Common uses of Apache Tomcat:

Running Java-based web apps

Hosting REST APIs

Learning and testing Java EE (Jakarta EE) technologies

Example:
When you build a Java web app with Servlets or JSP, you "deploy" the app (as a .war file) into Tomcat. Then you can access it at something like http://localhost:8080/yourapp.



## Starting up Tomcat server

Steps:
1.Download and install apache tomcat.
2.Next we have set system environment.
3.Within bin we have to run startup to run server in our machine.
4.After running server inside webapps we have to create folder next create html file within   it which helps to run in the localhost.
5.For example i created DOM as folder inside DOM I added 5 photos, 5 videos, 5 pdf, 5 audio and combined all this in a single html page(EntryPoint).
6./C:/Users/rohan/Downloads/apache-tomcat-9.0.38-windows-x64%20(1)/apache-tomcat-9.0.38/webapps/Dom/EntryPoint.html

## Connecting IntelliJ with a server 

1.Before connecting to the server we have to install Smart Tomcat Plugin in settings.
2.Then create a project.
3.In edit config set name as *Tomcat*,Paths -> Tomcat server as *Apache Tomcat/9.0.38*, Catalina base as "C:\Users\rohan\.SmartTomcat\Weather\Weather" and Deployment directory as "C:\Users\rohan\OneDrive\Documents\JAVA-SNIPPETS\JAVA-SNIPPETS\Weather\webapp" creating webapp directory in Weather project and the server port will be 8080.
4.After creating directory write html code as Testing.html in webapps then run it.
5.It will display in http://localhost:8080/Weather/Testing.html.
6.local host in nothing but running same file in different machine which are connected to the same network.